{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","grid","item","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","TransitionEvent","text","CountryPicker","handleCountry","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","i","key","App","state","fetchedData","setState","this","Fragment","imgDiv","image","src","coronaImg","alt","cards","subContainer","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32c6a934.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3rO5s\",\"grid\":\"Cards_grid__2ux2A\",\"card\":\"Cards_card__2hs69\",\"infected\":\"Cards_infected__D1SEP\",\"recovered\":\"Cards_recovered__3zCOV\",\"deaths\":\"Cards_deaths__Xp___\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"App_cards__2PNgt\",\"container\":\"App_container__2mmhz\",\"subContainer\":\"App_subContainer__3QJGG\",\"imgDiv\":\"App_imgDiv__1De6M\",\"image\":\"App_image__2xwhd\",\"image \":\"App_image __2WKsa\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n  if(!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\" className={styles.grid}>\r\n\r\n        <Grid item component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start = {0} end = {confirmed.value} duration = {2} separator = \".\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start = {0} end = {recovered.value} duration = {2} separator = \".\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of recovered cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start = {0} end = {deaths.value} duration = {2} separator = \".\" />    \r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of dead cases of Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if(country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {data: {recovered, confirmed, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n    return {recovered, confirmed, deaths, lastUpdate};\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate\r\n    }))\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: {countries} } = await axios.get(`${url}/countries`);\r\n    return countries.map((country => country.name));\r\n  } catch (error) {\r\n    console.log(\"Error: \" + error);\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport {fetchDailyData} from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n    ? (\r\n      <Line \r\n        data={{\r\n          labels: dailyData.map(({date}) => date),\r\n          datasets: [{\r\n            data: dailyData.map(({confirmed}) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333FF',\r\n            fill: true\r\n          }, {\r\n            data: dailyData.map(({deaths}) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true\r\n          }]\r\n        }}\r\n      />) : null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed\r\n    ? (\r\n      <Bar \r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: ['blue', 'green', 'red'],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n          }]\r\n        }}\r\n        options={{\r\n          legend: {display: false},\r\n          title: {display: TransitionEvent, text:`Current state in ${country}`}\r\n        }}\r\n    />) : null\r\n  )\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountry }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries())\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect default='' onChange={(e) => {handleCountry(e.target.value)}}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImg from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    country: ''\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.handleCountry();\r\n  }\r\n\r\n  handleCountry = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  }\r\n\r\n  render() {\r\n    const {data, country} = this.state\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <div className={styles.imgDiv}>\r\n          <img className={styles.image} src={coronaImg} alt=\"COVID-19\"/>\r\n        </div>\r\n        <div className={styles.container}>\r\n          <div className={styles.cards}><Cards data={data}/></div>\r\n          <div className={styles.subContainer}>\r\n            <CountryPicker handleCountry={this.handleCountry}/>\r\n            <Chart data={data} country={country}/>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__31lJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2UT3m\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}